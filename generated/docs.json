{
  "ExampleWorkerMCP": {
    "exported_as": "default",
    "description": "Anything you define within this class becomes automatically available inside Claude Desktop",
    "methods": [
      {
        "name": "getRandomNumber",
        "description": "Generates a random number. This is extra random because it had to travel all the way to\nyour nearest Cloudflare PoP to be calculated which... something something lava lamps?",
        "params": [],
        "returns": {
          "description": "A message containing a super duper random number",
          "type": "string"
        }
      },
      {
        "name": "takeScreenshot",
        "description": "Takes a screenshot of a given URL.",
        "params": [
          {
            "description": "The URL to take a screenshot of",
            "name": "url",
            "type": "string"
          }
        ],
        "returns": {
          "description": "A Response with an image/png type body containing the screenshot",
          "type": "Promise.<Response>"
        },
        "examples": [
          "const response = await worker.takeScreenshot('https://example.com')\nconst img = await response.arrayBuffer()"
        ]
      },
      {
        "name": "sendEmail",
        "description": "Send a text or HTML email to an arbitrary recipient.",
        "params": [
          {
            "description": "The email address of the recipient.",
            "name": "recipient",
            "type": "string"
          },
          {
            "description": "The subject of the email.",
            "name": "subject",
            "type": "string"
          },
          {
            "description": "The content type of the email. Can be text/plain or text/html",
            "name": "contentType",
            "type": "string"
          },
          {
            "description": "The body of the email. Must match the provided contentType parameter",
            "name": "body",
            "type": "string"
          }
        ],
        "returns": {
          "description": "A success message.",
          "type": "Promise.<string>"
        }
      },
      {
        "name": "generateImage",
        "description": "Generate an image using the `flux-1-schnell` model. Works best with 8 steps.",
        "params": [
          {
            "description": "A text description of the image you want to generate.",
            "name": "prompt",
            "type": "string"
          },
          {
            "description": "The number of diffusion steps; higher values can improve quality but take longer. Must be between 4 and 8, inclusive.",
            "name": "steps",
            "type": "number"
          }
        ],
        "returns": null
      }
    ],
    "statics": {}
  }
}
